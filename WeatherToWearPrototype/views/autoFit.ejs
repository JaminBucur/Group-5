<!DOCTYPE html>
<html lang="en">

  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>AutoFit - Weather To Wear</title>
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css"
      rel="stylesheet">

  </head>

  <body>
    <header>
      <%- include('partials/navbar') %>
    </header>

    <div class="container mt-5">
      <h2>AutoFit</h2>
      <p>Select a user-made closet and click "Generate Fit" to find the
        best fit based on the weather.</p>
      <!-- Display options -->
      <div class="row">
        <div class="col-md-6">
          <label for="closet-select" class="form-label">Select
            Closet:</label>
          <select class="form-select" id="closet-select">
            <% closets.forEach(closet => { %>
            <option value="<%= closet.ClosetID %>"><%=
              closet.ClosetName %></option>
            <% }); %>
          </select>
        </div>
      </div>

      <div id="clothing-data" style="display: none;"></div>
      <div class="row mt-3">
        <div class="col-md-6">
          <form id="generate-fit-form">
            <button type="submit" class="btn btn-primary"
              id="generate-fit-btn">Generate Fit</button>
          </form>
        </div>
      </div>

      <div class="row mt-3">
        <div class="col-md-6">
          <div id="outfit-recommendation"></div>
        </div>
      </div>
    </div>

    <script
      src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>
    <script>
    document.getElementById("generate-fit-form").addEventListener("submit", function(event) {
      event.preventDefault(); 
      returnAutofit();
    });

    //AutoFit Function 
    function returnAutofit() {
      var selectedCloset = document.getElementById("closet-select").value;
      console.log("Closet", selectedCloset);
      //location
      if ("geolocation" in navigator) {
        navigator.geolocation.getCurrentPosition(
          function(position) {
            const latitude = position.coords.latitude;
            const longitude = position.coords.longitude;
            //api call
            fetch(`https://api.weather.gov/points/${latitude},${longitude}`)
              .then(response => response.json())
              .then(data => {
                //city state
                const city = data.properties.relativeLocation.properties.city;
                const state = data.properties.relativeLocation.properties.state;
                const forecastEndpoint = data.properties.forecast;
                //current temp
                fetch(forecastEndpoint)
                  .then(response => response.json())
                  .then(forecastData => {
                    const periods = forecastData.properties.periods;
                    const currentPeriod = periods[0];
                    console.log("Temperature:", currentPeriod.temperature);
                    //weather report
                    var outfitRecommendation = "The weather in " + city + "," + state + " is currently " + currentPeriod.temperature + "Â°F.";
                    //closetcall
                    fetch("/displayClothing2", {
                        method: "POST",
                        headers: {
                          "Content-Type": "application/json"
                        },
                        body: JSON.stringify({
                          ClosetID: selectedCloset
                        })
                      })
                      .then(response => response.json())
                      .then(data => {
                        document.getElementById("clothing-data").textContent = JSON.stringify(data);
                        const recommendedClothing = generateRecommendation(data, currentPeriod.temperature);
                        outfitRecommendation += recommendedClothing;
                        document.getElementById("outfit-recommendation").innerHTML = outfitRecommendation;
                      })
                      .catch(error => console.error("Error with clothing data:", error));
                  })
                  .catch(error => console.error("API ERROR:", error));
              })
              .catch(error => console.error("Error with geolocation data:", error));
          },
          function(error) {
            console.error("Hip Hopiity No Location:", error);
          }
        );
      } else {
        console.error("NO GEOLOCATIONS.");
      }
    }

    //make recc
    function generateRecommendation(clothingData, temperature) {
      console.log("Received clothing data:", clothingData);

      const clothingArray = clothingData.clothing;
      const shirts = [];
      const pants = [];
      const jackets = [];

      clothingArray.forEach(item => {
        if (item.ClothingType === "Short Sleeved Shirt" || item.ClothingType === "Long Sleeved Shirt") {
          shirts.push(item);
        } else if (item.ClothingType === "Pants" || item.ClothingType === "Shorts" || item.ClothingType === "Dress") {
          pants.push(item);
        } else if (item.ClothingType === "Jacket") {
          jackets.push(item);
        }
      });

      let recommendation = "";
      if (pants.length === 0 && shirts.length === 0) {
          recommendation += " At least 1 set of shirts and pants are needed. Unable to generate fit.";
      }
      else if (shirts.length === 0) {
        recommendation += "Your closet lacks a shirt. Unable to generate fit.";
      }
      else if (pants.length === 0) {
        recommendation += "Your closet lacks pants. Unable to generate fit.";
      }
      
      

      if (temperature >= 75 && shirts.length > 0 && pants.length > 0) {
        // If temperature is above 75
        const randomShirtIndex = Math.floor(Math.random() * shirts.length);
        const randomPantsIndex = Math.floor(Math.random() * pants.length);
        const recommendedShirt = shirts[randomShirtIndex];
        const recommendedPants = pants[randomPantsIndex];
        recommendation += `Recommended Clothing: ${recommendedShirt.ClothingName}, ${recommendedPants.ClothingName}`;
        
      } else if (shirts.length > 0 && pants.length > 0 && jackets.length === 0) {
        // If temperature is below 75
        const randomShirtIndex = Math.floor(Math.random() * shirts.length);
        const randomPantsIndex = Math.floor(Math.random() * pants.length);
        const recommendedShirt = shirts[randomShirtIndex];
        const recommendedPants = pants[randomPantsIndex];
        recommendation += `Recommended Clothing: ${recommendedShirt.ClothingName}, ${recommendedPants.ClothingName}. The weather is very cold. It is reccomended to add a jacket to your closet.`;
      } else if (shirts.length > 0 && pants.length > 0) {
        // If temperature is below 75
        const randomShirtIndex = Math.floor(Math.random() * shirts.length);
        const randomPantsIndex = Math.floor(Math.random() * pants.length);
        const randomJacketIndex = Math.floor(Math.random() * jackets.length);
        const recommendedShirt = shirts[randomShirtIndex];
        const recommendedPants = pants[randomPantsIndex];
        const reccomendedJacket = jacket[randomJacketIndex];
        recommendation += `Recommended Clothing: ${recommendedShirt.ClothingName}, ${recommendedPants.ClothingName}, ${reccomendedJacket.ClothingName}`;
      }


      return recommendation || "Your closet has all the necessary items!";
    }
  </script>
  </body>

</html>